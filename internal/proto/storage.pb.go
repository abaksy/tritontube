// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/storage.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       string                 `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Content       []byte                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFileRequest) Reset() {
	*x = AddFileRequest{}
	mi := &file_proto_storage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFileRequest) ProtoMessage() {}

func (x *AddFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_storage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFileRequest.ProtoReflect.Descriptor instead.
func (*AddFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_storage_proto_rawDescGZIP(), []int{0}
}

func (x *AddFileRequest) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *AddFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *AddFileRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type AddFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFileResponse) Reset() {
	*x = AddFileResponse{}
	mi := &file_proto_storage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFileResponse) ProtoMessage() {}

func (x *AddFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_storage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFileResponse.ProtoReflect.Descriptor instead.
func (*AddFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_storage_proto_rawDescGZIP(), []int{1}
}

func (x *AddFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddFileResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       string                 `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileRequest) Reset() {
	*x = GetFileRequest{}
	mi := &file_proto_storage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileRequest) ProtoMessage() {}

func (x *GetFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_storage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileRequest.ProtoReflect.Descriptor instead.
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_storage_proto_rawDescGZIP(), []int{2}
}

func (x *GetFileRequest) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *GetFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type GetFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileResponse) Reset() {
	*x = GetFileResponse{}
	mi := &file_proto_storage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileResponse) ProtoMessage() {}

func (x *GetFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_storage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileResponse.ProtoReflect.Descriptor instead.
func (*GetFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_storage_proto_rawDescGZIP(), []int{3}
}

func (x *GetFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetFileResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GetFileResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       string                 `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_proto_storage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_storage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_storage_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteFileRequest) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *DeleteFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type DeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	mi := &file_proto_storage_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_storage_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_storage_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteFileResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       string                 `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesRequest) Reset() {
	*x = ListFilesRequest{}
	mi := &file_proto_storage_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesRequest) ProtoMessage() {}

func (x *ListFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_storage_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesRequest.ProtoReflect.Descriptor instead.
func (*ListFilesRequest) Descriptor() ([]byte, []int) {
	return file_proto_storage_proto_rawDescGZIP(), []int{6}
}

func (x *ListFilesRequest) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

type ListFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []string               `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesResponse) Reset() {
	*x = ListFilesResponse{}
	mi := &file_proto_storage_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesResponse) ProtoMessage() {}

func (x *ListFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_storage_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesResponse.ProtoReflect.Descriptor instead.
func (*ListFilesResponse) Descriptor() ([]byte, []int) {
	return file_proto_storage_proto_rawDescGZIP(), []int{7}
}

func (x *ListFilesResponse) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ListFilesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListFilesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListAllFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllFilesRequest) Reset() {
	*x = ListAllFilesRequest{}
	mi := &file_proto_storage_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllFilesRequest) ProtoMessage() {}

func (x *ListAllFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_storage_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllFilesRequest.ProtoReflect.Descriptor instead.
func (*ListAllFilesRequest) Descriptor() ([]byte, []int) {
	return file_proto_storage_proto_rawDescGZIP(), []int{8}
}

type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       string                 `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"` // Video identifier
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`              // File name
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                     // File size in bytes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_proto_storage_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_storage_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_proto_storage_proto_rawDescGZIP(), []int{9}
}

func (x *FileInfo) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *FileInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListAllFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileInfo            `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllFilesResponse) Reset() {
	*x = ListAllFilesResponse{}
	mi := &file_proto_storage_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllFilesResponse) ProtoMessage() {}

func (x *ListAllFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_storage_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllFilesResponse.ProtoReflect.Descriptor instead.
func (*ListAllFilesResponse) Descriptor() ([]byte, []int) {
	return file_proto_storage_proto_rawDescGZIP(), []int{10}
}

func (x *ListAllFilesResponse) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ListAllFilesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListAllFilesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_proto_storage_proto protoreflect.FileDescriptor

const file_proto_storage_proto_rawDesc = "" +
	"\n" +
	"\x13proto/storage.proto\x12\n" +
	"tritontube\"a\n" +
	"\x0eAddFileRequest\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\tR\avideoId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x18\n" +
	"\acontent\x18\x03 \x01(\fR\acontent\"A\n" +
	"\x0fAddFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"G\n" +
	"\x0eGetFileRequest\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\tR\avideoId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\"[\n" +
	"\x0fGetFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"J\n" +
	"\x11DeleteFileRequest\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\tR\avideoId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\"D\n" +
	"\x12DeleteFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"-\n" +
	"\x10ListFilesRequest\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\tR\avideoId\"Y\n" +
	"\x11ListFilesResponse\x12\x14\n" +
	"\x05files\x18\x01 \x03(\tR\x05files\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\x15\n" +
	"\x13ListAllFilesRequest\"U\n" +
	"\bFileInfo\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\tR\avideoId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\"r\n" +
	"\x14ListAllFilesResponse\x12*\n" +
	"\x05files\x18\x01 \x03(\v2\x14.tritontube.FileInfoR\x05files\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error2\x82\x03\n" +
	"\x0eStorageService\x12B\n" +
	"\aAddFile\x12\x1a.tritontube.AddFileRequest\x1a\x1b.tritontube.AddFileResponse\x12B\n" +
	"\aGetFile\x12\x1a.tritontube.GetFileRequest\x1a\x1b.tritontube.GetFileResponse\x12K\n" +
	"\n" +
	"DeleteFile\x12\x1d.tritontube.DeleteFileRequest\x1a\x1e.tritontube.DeleteFileResponse\x12H\n" +
	"\tListFiles\x12\x1c.tritontube.ListFilesRequest\x1a\x1d.tritontube.ListFilesResponse\x12Q\n" +
	"\fListAllFiles\x12\x1f.tritontube.ListAllFilesRequest\x1a .tritontube.ListAllFilesResponseB\x16Z\x14internal/proto;protob\x06proto3"

var (
	file_proto_storage_proto_rawDescOnce sync.Once
	file_proto_storage_proto_rawDescData []byte
)

func file_proto_storage_proto_rawDescGZIP() []byte {
	file_proto_storage_proto_rawDescOnce.Do(func() {
		file_proto_storage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_storage_proto_rawDesc), len(file_proto_storage_proto_rawDesc)))
	})
	return file_proto_storage_proto_rawDescData
}

var file_proto_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_storage_proto_goTypes = []any{
	(*AddFileRequest)(nil),       // 0: tritontube.AddFileRequest
	(*AddFileResponse)(nil),      // 1: tritontube.AddFileResponse
	(*GetFileRequest)(nil),       // 2: tritontube.GetFileRequest
	(*GetFileResponse)(nil),      // 3: tritontube.GetFileResponse
	(*DeleteFileRequest)(nil),    // 4: tritontube.DeleteFileRequest
	(*DeleteFileResponse)(nil),   // 5: tritontube.DeleteFileResponse
	(*ListFilesRequest)(nil),     // 6: tritontube.ListFilesRequest
	(*ListFilesResponse)(nil),    // 7: tritontube.ListFilesResponse
	(*ListAllFilesRequest)(nil),  // 8: tritontube.ListAllFilesRequest
	(*FileInfo)(nil),             // 9: tritontube.FileInfo
	(*ListAllFilesResponse)(nil), // 10: tritontube.ListAllFilesResponse
}
var file_proto_storage_proto_depIdxs = []int32{
	9,  // 0: tritontube.ListAllFilesResponse.files:type_name -> tritontube.FileInfo
	0,  // 1: tritontube.StorageService.AddFile:input_type -> tritontube.AddFileRequest
	2,  // 2: tritontube.StorageService.GetFile:input_type -> tritontube.GetFileRequest
	4,  // 3: tritontube.StorageService.DeleteFile:input_type -> tritontube.DeleteFileRequest
	6,  // 4: tritontube.StorageService.ListFiles:input_type -> tritontube.ListFilesRequest
	8,  // 5: tritontube.StorageService.ListAllFiles:input_type -> tritontube.ListAllFilesRequest
	1,  // 6: tritontube.StorageService.AddFile:output_type -> tritontube.AddFileResponse
	3,  // 7: tritontube.StorageService.GetFile:output_type -> tritontube.GetFileResponse
	5,  // 8: tritontube.StorageService.DeleteFile:output_type -> tritontube.DeleteFileResponse
	7,  // 9: tritontube.StorageService.ListFiles:output_type -> tritontube.ListFilesResponse
	10, // 10: tritontube.StorageService.ListAllFiles:output_type -> tritontube.ListAllFilesResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_proto_storage_proto_init() }
func file_proto_storage_proto_init() {
	if File_proto_storage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_storage_proto_rawDesc), len(file_proto_storage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_storage_proto_goTypes,
		DependencyIndexes: file_proto_storage_proto_depIdxs,
		MessageInfos:      file_proto_storage_proto_msgTypes,
	}.Build()
	File_proto_storage_proto = out.File
	file_proto_storage_proto_goTypes = nil
	file_proto_storage_proto_depIdxs = nil
}
